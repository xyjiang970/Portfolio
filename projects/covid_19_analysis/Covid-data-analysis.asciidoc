== COVID-19 Analysis

Purpose of this project is to look into some covid statistics. We will
see what the correlation between human development index (HDI) and
mortality rate (total deaths attributed to COVID-19).


+*In[5]:*+
[source, ipython3]
----
# Importing needed libraries for data analysis.

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
----


+*In[6]:*+
[source, ipython3]
----
# Loading "Our World in Data's" Covid csv file into a dataframe.

df = pd.read_csv('owid-covid-data.csv')
----


+*In[14]:*+
[source, ipython3]
----
# Taking a look at what our dataframe looks like.

df
----


+*Out[14]:*+
----
[cols=",,,,,,,,,,,,,,,,,,,,,",options="header",]
|===
| |iso_code |continent |location |date |total_cases |new_cases
|new_cases_smoothed |total_deaths |new_deaths |new_deaths_smoothed |...
|extreme_poverty |cardiovasc_death_rate |diabetes_prevalence
|female_smokers |male_smokers |handwashing_facilities
|hospital_beds_per_thousand |life_expectancy |human_development_index
|excess_mortality
|0 |AFG |Asia |Afghanistan |2020-02-24 |5.0 |5.0 |NaN |NaN |NaN |NaN
|... |NaN |597.029 |9.59 |NaN |NaN |37.746 |0.5 |64.83 |0.511 |NaN

|1 |AFG |Asia |Afghanistan |2020-02-25 |5.0 |0.0 |NaN |NaN |NaN |NaN
|... |NaN |597.029 |9.59 |NaN |NaN |37.746 |0.5 |64.83 |0.511 |NaN

|2 |AFG |Asia |Afghanistan |2020-02-26 |5.0 |0.0 |NaN |NaN |NaN |NaN
|... |NaN |597.029 |9.59 |NaN |NaN |37.746 |0.5 |64.83 |0.511 |NaN

|3 |AFG |Asia |Afghanistan |2020-02-27 |5.0 |0.0 |NaN |NaN |NaN |NaN
|... |NaN |597.029 |9.59 |NaN |NaN |37.746 |0.5 |64.83 |0.511 |NaN

|4 |AFG |Asia |Afghanistan |2020-02-28 |5.0 |0.0 |NaN |NaN |NaN |NaN
|... |NaN |597.029 |9.59 |NaN |NaN |37.746 |0.5 |64.83 |0.511 |NaN

|... |... |... |... |... |... |... |... |... |... |... |... |... |...
|... |... |... |... |... |... |... |...

|118129 |ZWE |Africa |Zimbabwe |2021-09-16 |127368.0 |285.0 |187.429
|4560.0 |9.0 |5.571 |... |21.4 |307.846 |1.82 |1.6 |30.7 |36.791 |1.7
|61.49 |0.571 |NaN

|118130 |ZWE |Africa |Zimbabwe |2021-09-17 |127632.0 |264.0 |209.857
|4562.0 |2.0 |4.286 |... |21.4 |307.846 |1.82 |1.6 |30.7 |36.791 |1.7
|61.49 |0.571 |NaN

|118131 |ZWE |Africa |Zimbabwe |2021-09-18 |127739.0 |107.0 |217.000
|4563.0 |1.0 |3.857 |... |21.4 |307.846 |1.82 |1.6 |30.7 |36.791 |1.7
|61.49 |0.571 |NaN

|118132 |ZWE |Africa |Zimbabwe |2021-09-19 |127938.0 |199.0 |238.429
|4567.0 |4.0 |4.143 |... |21.4 |307.846 |1.82 |1.6 |30.7 |36.791 |1.7
|61.49 |0.571 |NaN

|118133 |ZWE |Africa |Zimbabwe |2021-09-20 |128186.0 |248.0 |255.286
|4569.0 |2.0 |3.714 |... |21.4 |307.846 |1.82 |1.6 |30.7 |36.791 |1.7
|61.49 |0.571 |NaN
|===

118134 rows × 62 columns
----


+*In[8]:*+
[source, ipython3]
----
# Taking a look at the summary of our datafram (specifically the values and columns).

df.info(verbose = True)
----


+*Out[8]:*+
----
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 118134 entries, 0 to 118133
Data columns (total 62 columns):
 #   Column                                 Non-Null Count   Dtype  
---  ------                                 --------------   -----  
 0   iso_code                               118134 non-null  object 
 1   continent                              112736 non-null  object 
 2   location                               118134 non-null  object 
 3   date                                   118134 non-null  object 
 4   total_cases                            112287 non-null  float64
 5   new_cases                              112284 non-null  float64
 6   new_cases_smoothed                     111269 non-null  float64
 7   total_deaths                           101591 non-null  float64
 8   new_deaths                             101746 non-null  float64
 9   new_deaths_smoothed                    111269 non-null  float64
 10  total_cases_per_million                111695 non-null  float64
 11  new_cases_per_million                  111692 non-null  float64
 12  new_cases_smoothed_per_million         110682 non-null  float64
 13  total_deaths_per_million               101012 non-null  float64
 14  new_deaths_per_million                 101167 non-null  float64
 15  new_deaths_smoothed_per_million        110682 non-null  float64
 16  reproduction_rate                      94434 non-null   float64
 17  icu_patients                           13351 non-null   float64
 18  icu_patients_per_million               13351 non-null   float64
 19  hosp_patients                          15319 non-null   float64
 20  hosp_patients_per_million              15319 non-null   float64
 21  weekly_icu_admissions                  1178 non-null    float64
 22  weekly_icu_admissions_per_million      1178 non-null    float64
 23  weekly_hosp_admissions                 2147 non-null    float64
 24  weekly_hosp_admissions_per_million     2147 non-null    float64
 25  new_tests                              51338 non-null   float64
 26  total_tests                            51205 non-null   float64
 27  total_tests_per_thousand               51205 non-null   float64
 28  new_tests_per_thousand                 51338 non-null   float64
 29  new_tests_smoothed                     60886 non-null   float64
 30  new_tests_smoothed_per_thousand        60886 non-null   float64
 31  positive_rate                          57623 non-null   float64
 32  tests_per_case                         56996 non-null   float64
 33  tests_units                            62772 non-null   object 
 34  total_vaccinations                     26180 non-null   float64
 35  people_vaccinated                      25042 non-null   float64
 36  people_fully_vaccinated                22031 non-null   float64
 37  total_boosters                         2345 non-null    float64
 38  new_vaccinations                       21696 non-null   float64
 39  new_vaccinations_smoothed              46739 non-null   float64
 40  total_vaccinations_per_hundred         26180 non-null   float64
 41  people_vaccinated_per_hundred          25042 non-null   float64
 42  people_fully_vaccinated_per_hundred    22031 non-null   float64
 43  total_boosters_per_hundred             2345 non-null    float64
 44  new_vaccinations_smoothed_per_million  46739 non-null   float64
 45  stringency_index                       98473 non-null   float64
 46  population                             117328 non-null  float64
 47  population_density                     109231 non-null  float64
 48  median_age                             104392 non-null  float64
 49  aged_65_older                          103230 non-null  float64
 50  aged_70_older                          103819 non-null  float64
 51  gdp_per_capita                         105003 non-null  float64
 52  extreme_poverty                        70510 non-null   float64
 53  cardiovasc_death_rate                  104688 non-null  float64
 54  diabetes_prevalence                    107869 non-null  float64
 55  female_smokers                         81759 non-null   float64
 56  male_smokers                           80571 non-null   float64
 57  handwashing_facilities                 52591 non-null   float64
 58  hospital_beds_per_thousand             95208 non-null   float64
 59  life_expectancy                        112063 non-null  float64
 60  human_development_index                104783 non-null  float64
 61  excess_mortality                       4200 non-null    float64
dtypes: float64(57), object(5)
memory usage: 55.9+ MB
----


+*In[9]:*+
[source, ipython3]
----
# Filtering by the most recent date when this project is started, which is Aug. 15th, 2021

most_recent_date = df[df['date'] == '2021-08-30']

# Top tourist destinations and most populus countries in Asia, Europe, and North America
countries = ['France','Spain','United States','Italy','Turkey', 'Malaysia',
             'Mexico','Taiwan','Germany','United Kingdom','Cuba','Canada',
             'Japan','South Korea','Netherlands','India','Guatemala','Haiti',]

countries_of_interest = most_recent_date[most_recent_date['location'].isin(countries)]
----


+*In[10]:*+
[source, ipython3]
----
# Let's see what that looks like (only looking into the first 5 rows):

countries_of_interest.head()
----


+*Out[10]:*+
----
[cols=",,,,,,,,,,,,,,,,,,,,,",options="header",]
|===
| |iso_code |continent |location |date |total_cases |new_cases
|new_cases_smoothed |total_deaths |new_deaths |new_deaths_smoothed |...
|extreme_poverty |cardiovasc_death_rate |diabetes_prevalence
|female_smokers |male_smokers |handwashing_facilities
|hospital_beds_per_thousand |life_expectancy |human_development_index
|excess_mortality
|19730 |CAN |North America |Canada |2021-08-30 |1504157.0 |6874.0
|3245.571 |26972.0 |18.0 |22.429 |... |0.5 |105.599 |7.37 |12.0 |16.6
|NaN |2.50 |82.43 |0.929 |NaN

|26817 |CUB |North America |Cuba |2021-08-30 |646513.0 |6075.0 |7699.143
|5219.0 |75.0 |85.857 |... |NaN |190.968 |8.27 |17.1 |53.3 |85.198 |5.20
|78.80 |0.783 |NaN

|38796 |FRA |Europe |France |2021-08-30 |6834998.0 |7688.0 |18101.286
|114778.0 |151.0 |120.000 |... |NaN |86.060 |4.77 |30.1 |35.6 |NaN |5.98
|82.66 |0.901 |NaN

|41309 |DEU |Europe |Germany |2021-08-30 |3947035.0 |6823.0 |9343.143
|92208.0 |62.0 |25.714 |... |NaN |156.139 |8.31 |28.2 |33.1 |NaN |8.00
|81.33 |0.947 |NaN

|44061 |GTM |North America |Guatemala |2021-08-30 |465799.0 |740.0
|3684.571 |11886.0 |28.0 |52.857 |... |8.7 |155.898 |10.18 |NaN |NaN
|76.665 |0.60 |74.30 |0.663 |NaN
|===

5 rows × 62 columns
----


+*In[11]:*+
[source, ipython3]
----
# Creating a new DF with only the columns needed for now.

# The specific columns we are looking to use are:

# 1 -> continent
# 2 -> location (country)
# 4 -> total_cases
# 7 -> total_deaths
# 31 -> positive_rate
# 36 -> people_fully_vaccinated
# 45 -> stringency_index
# 46 -> population
# 59 -> life_expectancy
# 60 -> human_development_index

data = countries_of_interest.iloc[:,[1,2,4,7,36,31,45,46,59,60]] 

# Using iloc here because it is more efficient than typing out each name of the column.
----


+*In[12]:*+
[source, ipython3]
----
# Sorting in alphabetical order by continent.

data.sort_values('continent')
----


+*Out[12]:*+
----
[cols=",,,,,,,,,,",options="header",]
|===
| |continent |location |total_cases |total_deaths
|people_fully_vaccinated |positive_rate |stringency_index |population
|life_expectancy |human_development_index
|54890 |Asia |Japan |1473847.0 |16016.0 |57369554.0 |0.159 |52.31
|1.260508e+08 |84.63 |0.919

|109230 |Asia |Turkey |6366408.0 |56458.0 |36765581.0 |0.065 |32.41
|8.504274e+07 |77.69 |0.820

|104556 |Asia |Taiwan |15991.0 |834.0 |900651.0 |0.000 |NaN
|2.385501e+07 |80.46 |NaN

|49417 |Asia |India |32768880.0 |438560.0 |146228416.0 |0.023 |70.83
|1.393409e+09 |69.66 |0.645

|65524 |Asia |Malaysia |1725357.0 |16382.0 |14989026.0 |NaN |NaN
|3.277620e+07 |76.16 |0.810

|99373 |Asia |South Korea |251421.0 |2285.0 |15246121.0 |0.044 |50.93
|5.130518e+07 |83.03 |0.916

|38796 |Europe |France |6834998.0 |114778.0 |40040630.0 |0.026 |66.67
|6.756425e+07 |82.66 |0.901

|41309 |Europe |Germany |3947035.0 |92208.0 |50342010.0 |NaN |62.04
|8.390047e+07 |81.33 |0.947

|100505 |Europe |Spain |4847298.0 |84146.0 |32996436.0 |0.071 |47.69
|4.674521e+07 |83.56 |0.904

|53723 |Europe |Italy |4534499.0 |129146.0 |36539599.0 |0.028 |65.28
|6.036747e+07 |83.51 |0.892

|111935 |Europe |United Kingdom |6789189.0 |132808.0 |42790585.0 |0.042
|43.98 |6.820711e+07 |81.32 |0.932

|75561 |Europe |Netherlands |1973984.0 |18348.0 |NaN |NaN |41.67
|1.717309e+07 |82.28 |0.944

|19730 |North America |Canada |1504157.0 |26972.0 |25361100.0 |0.042
|69.91 |3.806791e+07 |82.43 |0.929

|46511 |North America |Haiti |20850.0 |584.0 |NaN |NaN |55.56
|1.154168e+07 |64.00 |0.510

|44061 |North America |Guatemala |465799.0 |11886.0 |1197918.0 |0.307
|66.20 |1.824987e+07 |74.30 |0.663

|26817 |North America |Cuba |646513.0 |5219.0 |3792398.0 |NaN |71.76
|1.131750e+07 |78.80 |0.783

|69289 |North America |Mexico |3341264.0 |258491.0 |33922392.0 |0.397
|67.13 |1.302622e+08 |75.05 |0.779

|112543 |North America |United States |39150680.0 |639737.0 |173832202.0
|0.099 |57.87 |3.329151e+08 |78.86 |0.926
|===
----


+*In[13]:*+
[source, ipython3]
----
# Filling in NaN values manually with the most recent info. on that datapoint online.

data.at[104556,"stringency_index"] = 56.48 # stringency_index of Taiwan is 56.48 (2021)
data.at[104556, "human_development_index"] = 0.916 # HDI of Taiwan is  (201)
#data.at[65524, "positive_rate"] =  #

data.sort_values('continent')
----


+*Out[13]:*+
----
[cols=",,,,,,,,,,",options="header",]
|===
| |continent |location |total_cases |total_deaths
|people_fully_vaccinated |positive_rate |stringency_index |population
|life_expectancy |human_development_index
|54890 |Asia |Japan |1473847.0 |16016.0 |57369554.0 |0.159 |52.31
|1.260508e+08 |84.63 |0.919

|109230 |Asia |Turkey |6366408.0 |56458.0 |36765581.0 |0.065 |32.41
|8.504274e+07 |77.69 |0.820

|104556 |Asia |Taiwan |15991.0 |834.0 |900651.0 |0.000 |56.48
|2.385501e+07 |80.46 |0.916

|49417 |Asia |India |32768880.0 |438560.0 |146228416.0 |0.023 |70.83
|1.393409e+09 |69.66 |0.645

|65524 |Asia |Malaysia |1725357.0 |16382.0 |14989026.0 |NaN |NaN
|3.277620e+07 |76.16 |0.810

|99373 |Asia |South Korea |251421.0 |2285.0 |15246121.0 |0.044 |50.93
|5.130518e+07 |83.03 |0.916

|38796 |Europe |France |6834998.0 |114778.0 |40040630.0 |0.026 |66.67
|6.756425e+07 |82.66 |0.901

|41309 |Europe |Germany |3947035.0 |92208.0 |50342010.0 |NaN |62.04
|8.390047e+07 |81.33 |0.947

|100505 |Europe |Spain |4847298.0 |84146.0 |32996436.0 |0.071 |47.69
|4.674521e+07 |83.56 |0.904

|53723 |Europe |Italy |4534499.0 |129146.0 |36539599.0 |0.028 |65.28
|6.036747e+07 |83.51 |0.892

|111935 |Europe |United Kingdom |6789189.0 |132808.0 |42790585.0 |0.042
|43.98 |6.820711e+07 |81.32 |0.932

|75561 |Europe |Netherlands |1973984.0 |18348.0 |NaN |NaN |41.67
|1.717309e+07 |82.28 |0.944

|19730 |North America |Canada |1504157.0 |26972.0 |25361100.0 |0.042
|69.91 |3.806791e+07 |82.43 |0.929

|46511 |North America |Haiti |20850.0 |584.0 |NaN |NaN |55.56
|1.154168e+07 |64.00 |0.510

|44061 |North America |Guatemala |465799.0 |11886.0 |1197918.0 |0.307
|66.20 |1.824987e+07 |74.30 |0.663

|26817 |North America |Cuba |646513.0 |5219.0 |3792398.0 |NaN |71.76
|1.131750e+07 |78.80 |0.783

|69289 |North America |Mexico |3341264.0 |258491.0 |33922392.0 |0.397
|67.13 |1.302622e+08 |75.05 |0.779

|112543 |North America |United States |39150680.0 |639737.0 |173832202.0
|0.099 |57.87 |3.329151e+08 |78.86 |0.926
|===
----


+*In[4]:*+
[source, ipython3]
----
%load_ext watermark

%watermark -v -m -p pandas,matplotlib,numpy,watermark

print(' ')
%watermark -u -n -t -z
----


+*Out[4]:*+
----
The watermark extension is already loaded. To reload it, use:
  %reload_ext watermark
Python implementation: CPython
Python version       : 3.8.8
IPython version      : 7.22.0

pandas    : 1.2.4
matplotlib: 3.3.4
numpy     : 1.20.1
watermark : 2.2.0

Compiler    : Clang 10.0.0 
OS          : Darwin
Release     : 20.6.0
Machine     : x86_64
Processor   : i386
CPU cores   : 8
Architecture: 64bit

 
Last updated: Wed Sep 29 2021 23:39:59EDT

----


+*In[ ]:*+
[source, ipython3]
----

----
